val raspotifyID = "73cb47ef5a6e6c42413e61f7b52bc0b2c0ab4167"

rule "Sync Denon power status to raspotify play status"
when
  Time cron "0/1 * * * * ? *"
then
  if(spotifyTrackPlayer.state == PLAY && spotifyDevices.state == raspotifyID && DenonPower.state == OFF) { DenonPower.sendCommand(ON); DenonInputAux1.sendCommand(ON); }
  if(spotifyTrackPlayer.state == PLAY && spotifyDevices.state == raspotifyID) { spotifyPlayingSomewhereElse.sendCommand(OFF); DenonInputAux1.sendCommand(ON); }
  if(spotifyTrackPlayer.state == PLAY && spotifyDevices.state != raspotifyID && DenonPower.state == ON) DenonPower.sendCommand(OFF)
  if(spotifyTrackPlayer.state == PLAY && spotifyDevices.state != raspotifyID) spotifyPlayingSomewhereElse.sendCommand(ON)
  if(spotifyTrackPlayer.state != PLAY) spotifyPlayingSomewhereElse.sendCommand(OFF)
end

rule "Switch Denon power off on playback pause"
when
  Item spotifyTrackPlayer changed to PAUSE
then
  if(spotifyDevices.state == raspotifyID) {
    DenonPower.sendCommand(OFF)
  }
end

rule "Produce warning when Spotify is playing on a different device"
when
  Item spotifyTrackPlayer changed to PLAY
then
  if(spotifyDevices.state != raspotifyID) {
    spotifyPlayingSomewhereElse.sendCommand(ON)
  }
  else {
    spotifyPlayingSomewhereElse.sendCommand(OFF)
  }
end
